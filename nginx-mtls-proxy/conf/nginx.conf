events {
  worker_connections 1024;
}

http {
  # Nginx will handle gzip compression of responses from the app server
  gzip on;
  gzip_proxied any;
  gzip_types text/plain application/json;
  gzip_min_length 1000;

  server {
    listen 443 ssl;

    ssl_certificate /etc/nginx/conf.d/server.crt;
    ssl_certificate_key /etc/nginx/conf.d/server.key;
    ssl_client_certificate /etc/nginx/conf.d/ca.crt;
    ssl_verify_depth 1;
    ssl_verify_client on;

    location / {
      # “subject DN” string of the client certificate for an established SSL connection to verify
      # Example: CN=client-host,O=Self,L=Bangalore,ST=KA,C=IN
      if ($ssl_client_s_dn != "###PLACEHOLDER###Subject-DN###") {
            return 403;
      }
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the whitelist expectations will
      # get sent to the application server
      proxy_pass ###PLACEHOLDER###URL-APP-SERVER###;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }
  }
}